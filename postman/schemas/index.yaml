openapi: '3.0.0'
info:
  version: '1.0.0'
  title: 'Give-food-review-API'
servers:
  - url: /api/v1
paths:
  /authorization/login:
    post:
      tags:
      - authorization
      summary: Login user
      requestBody:
        description: Object of login user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
        required: true
      responses:
        200:
          description: User is correctly logged in
          # content:
          #   application/json:
          #     schema:
          #       $ref: '#/components/schemas/Spacecraft'
        403:
          description: User already log in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /authorization/register:
    post:
      tags:
      - authorization
      summary: Register user
      responses:
        201:
          description: User is correctly register
          # content:
          #   application/json:
          #     schema:
          #       $ref: '#/components/schemas/Spacecraft'
        400:
          description: Wrong user data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: User already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /authorization/register/confirm:
    post:
      tags:
      - authorization
      summary: Confirm registration of user
      responses:
        200:
          description: User is correctly register
          # content:
          #   application/json:
          #     schema:
          #       $ref: '#/components/schemas/Spacecraft'
        400:
          description: Wrong user data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: User already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /authorization/unregister:
    delete:
      tags:
      - authorization
      summary: Unregister user
      responses:
        201:
          description: User correctly unregister
          # content:
          #   application/json:
          #     schema:
          #       $ref: '#/components/schemas/Spacecraft'
        403:
          description: User not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /authorization/unregister/confirm:
    delete:
      tags:
      - authorization
      summary: Confirm unregistration of user
      responses:
        200:
          description: User correctly unregister
          # content:
          #   application/json:
          #     schema:
          #       $ref: '#/components/schemas/Spacecraft'
        403:
          description: User not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /authorization/forgotten:
    put:
      tags:
      - authorization
      summary: Action to reset password
      responses:
        201:
          description: Action for reseting password
          # content:
          #   application/json:
          #     schema:
          #       $ref: '#/components/schemas/Spacecraft'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /authorization/forgotten/change:
    put:
      tags:
      - authorization
      summary: Final action to reset password
      responses:
        200:
          description: Password correctly reset
          # content:
          #   application/json:
          #     schema:
          #       $ref: '#/components/schemas/Spacecraft'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /authorization/user-update:
    put:
      tags:
      - authorization
      summary: Update of user
      responses:
        200:
          description: User correctly updated
          # content:
          #   application/json:
          #     schema:
          #       $ref: '#/components/schemas/Spacecraft'
        400:
          description: User data was Wrong
          # content:
          #   application/json:
          #     schema:
          #       $ref: '#/components/schemas/Spacecraft'
        403:
          description: User not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /food-posts/get-all-posts:
    get:
      tags:
        - posts
      summary: Get all posts for user in area
      responses:
        200:
          description: List with all posts
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/FoodPost'
        403:
          description: User not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
components:
  schemas:
    LoginUser:
      description: Login user object
      type: object
      properties:
        email:
          $ref: '#/components/schemas/Email'
    RegisterUser:
      description: Register user object
      type: object
      properties:
        email:
          $ref: '#/components/schemas/Email'
    Email:
      description: The unique email
      type: string
    FoodPost:
      description: Object for post about food
    Error:
      type: object
      required:
        - messageId
        - messageDescription
      properties:
        messageId:
          description: Unique number for error
          type: integer
        messageDescription:
          description: A human readable error message
          type: string
  securitySchemes:
    ApiKey:
      type: apiKey
      in: header
      name: X-Api-Key
security:
  - ApiKey: []